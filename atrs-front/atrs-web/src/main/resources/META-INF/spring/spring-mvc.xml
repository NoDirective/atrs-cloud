<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
      http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <mvc:annotation-driven validator="validator">
        <mvc:argument-resolvers>
            <bean
                class="org.springframework.data.web.PageableHandlerMethodArgumentResolver">
                <property name="maxPageSize" value="100" />
                <property name="fallbackPageable">
                    <bean class="org.springframework.data.domain.PageRequest">
                        <constructor-arg index="0"
                            value="0" />
                        <constructor-arg index="1"
                            value="10" />
                    </bean>
                </property>
            </bean>
            <bean
                class="org.springframework.security.web.method.annotation.AuthenticationPrincipalArgumentResolver" />
        </mvc:argument-resolvers>
        <!-- workarround to CVE-2016-5007. -->
        <mvc:path-matching path-matcher="pathMatcher" />
    </mvc:annotation-driven>

    <context:property-placeholder
        location="classpath*:/META-INF/spring/*.properties" />

    <context:component-scan base-package="jp.co.ntt.atrs.app" />

    <mvc:resources mapping="/resources/**"
        location="/resources/,classpath:META-INF/resources/"
        cache-period="#{60 * 60}" />

    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**" />
            <mvc:exclude-mapping path="/resources/**" />
            <bean
                class="org.terasoluna.gfw.web.logging.TraceLoggingInterceptor" />
        </mvc:interceptor>

        <mvc:interceptor>
            <mvc:mapping path="/**" />
            <bean class="org.terasoluna.gfw.web.codelist.CodeListInterceptor">
                <property name="codeListIdPattern" value="CL_.+" />
            </bean>
        </mvc:interceptor>

        <mvc:interceptor>
            <mvc:mapping path="/**" />
            <bean
                class="org.terasoluna.gfw.web.token.transaction.TransactionTokenInterceptor">
                <constructor-arg value="20" />
            </bean>
        </mvc:interceptor>
    </mvc:interceptors>
    <mvc:view-resolvers>
        <mvc:tiles />
        <mvc:jsp prefix="/WEB-INF/views/" />
    </mvc:view-resolvers>

    <mvc:tiles-configurer>
        <mvc:definitions location="/WEB-INF/tiles/tiles-definitions.xml" />
    </mvc:tiles-configurer>



    <!-- FIXME RequestDataValueProcessorが上書きされ、トランザクショントークンが使用できない問題への暫定対処 
        ※解除する際には定義を戻す必要あり ( issue : https://github.com/spring-projects/spring-boot/issues/4676 
        ) -->
    <bean
        class="jp.co.ntt.atrs.app.common.boot.RequestDataValueProcessorPostProcessor" />

    <!-- FIXME Filter型のBeanが二重にサーブレットコンテナに登録されてしまう問題への暫定対処 ( issue : http://stackoverflow.com/questions/28421966/prevent-spring-boot-from-registering-a-servlet-filter 
        ) -->
    <bean
        class="jp.co.ntt.atrs.app.common.boot.DefaultFiltersBeanFactoryPostProcessor" />

    <bean class="org.terasoluna.gfw.web.exception.SystemExceptionResolver">
        <property name="order" value="3" />
        <property name="exceptionMappings">
            <map>
                <entry key="InvalidTransactionTokenException"
                    value="common/error/token-error" />
                <entry key="BadRequestException" value="common/error/badRequest-error" />
                <entry key="Exception" value="common/error/system-error" />
            </map>
        </property>
        <property name="statusCodes">
            <map>
                <entry key="common/error/token-error" value="409" />
                <entry key="common/error/badRequest-error" value="400" />
            </map>
        </property>
        <property name="defaultStatusCode" value="500" />
        <property name="exceptionCodeResolver" ref="exceptionCodeResolver" />
    </bean>

    <bean id="handlerExceptionResolverLoggingInterceptor"
        class="org.terasoluna.gfw.web.exception.HandlerExceptionResolverLoggingInterceptor">
        <property name="exceptionLogger" ref="exceptionLogger" />
    </bean>
    <aop:config>
        <aop:advisor advice-ref="handlerExceptionResolverLoggingInterceptor"
            pointcut="execution(* org.springframework.web.servlet.HandlerExceptionResolver.resolveException(..))" />
    </aop:config>

    <!-- Setting PathMatcher. -->
    <bean id="pathMatcher" class="org.springframework.util.AntPathMatcher">
        <property name="trimTokens" value="false" />
    </bean>

    <bean
        class="org.springframework.validation.beanvalidation.MethodValidationPostProcessor">
        <property name="validator" ref="validator" />
    </bean>
</beans>
